.title-icon,
label, .label {
    display: flex;
    gap: 5px;
    align-items: center;
}

label, .label {
    .material-symbols-rounded {
        color: $c1;
    }
    margin: 7px 0 7px 0;

    input.input-text {
        margin: 0;
        padding: 3px;
        background-color: transparent;
    }
}

.flex {
    display: flex !important;

    @mixin flex-grow($value) {
        flex-grow: $value;
    }

    @for $i from 1 through 10 {
        .fg-#{$i} {
            @include flex-grow($i);
        }
    }

    @mixin gap($value) {
        gap: #{calc($value / 10)}px !important;
    }

    $i: 25;
    @while $i < 300 {
        &.gap-#{$i} {
            @include gap($i);
        }
        $i: $i + 25;
    }

    &.d-row {
        flex-direction: row;
    }

    &.d-column {
        flex-direction: column;
    }

    &.x-right {
        justify-content: right;
    }

    &.y-center {
        align-items: center;
    }

    &.x-center {
        justify-content: center;
    }

    &.stretch {
        justify-content: stretch;
    }

    &.wrap {
        flex-wrap: wrap;

        &.reverse {
            flex-wrap: wrap-reverse;
        }

        &.no {
            flex-wrap: nowrap;
        }
    }

    .last {
        margin-left: auto;
    }
}

$spacers: (
    0: 0px,
    1: 0.25rem,
    2: 0.5rem,
    3: 0.75rem,
    4: 1rem,
    5: 1.25rem,
    6: 1.50rem,
);

@each $key, $value in $spacers {
    .m-#{$key} {
        margin: $value !important;
    }
    .mt-#{$key} {
        margin-top: $value !important;
    }
    .mr-#{$key} {
        margin-right: $value !important;
    }
    .mb-#{$key} {
        margin-bottom: $value !important;
    }
    .ml-#{$key} {
        margin-left: $value !important;
    }
    .mx-#{$key} {
        margin-left: $value !important;
        margin-right: $value !important;
    }
    .my-#{$key} {
        margin-top: $value !important;
        margin-bottom: $value !important;
    }
}

.none {
    display: none;
}

h1,
h2,
h3,
h4,
h5 {
    display: flex;
    align-items: center;
    gap: 5px;
    margin: 0.5em 0 0.3em 0;

    &.icon {
        .material-symbols-rounded {
            color: $c1;

            &.warning {
                color: $c-warning;
            }
        }
    }

    &.code {
        font-family: $monospace;
        justify-content: center;
        letter-spacing: 10px;
        color: $c1;
    }
}

.color {
    &.warn {
        color: $c-warning !important;
    }
    &.danger {
        color: $c-danger !important;
    }
}

p {
    font-size: $fs-m;
    color: $text-color;
    margin: 0.5em auto;
    line-height: 1.5;

    a {
        color: $c2;
        text-decoration: none;
        border-bottom: 1px dashed $c2;
        cursor: pointer;

        &:hover {
            border-bottom: 1px solid $c2;
        }
    }

    b {
        color: $c1;
        font-weight: normal;
    }

    &.center {
        text-align: center;
    }

    &.secondary {
        color: $text-color-2;
    }

    &.description {
        color: $text-color-2;
        font-size: $fs-s;
    }
}

.fs-l {
    font-size: $fs-l;
}

.slider {
    cursor: pointer;
}

.w-100 {
    width: 100%;
}

hr {
    margin: 1rem 0;
    color: $border-color;
    border: 0;
    border-top: 1px solid $border-color;

    &.dashed {
        background-color: transparent;
        border-bottom: 1px dashed $border-color; 
    }

    &.s {
        width: 90%;
    }
}

.btn {
    display: flex;
    align-items: center;
    gap: 5px;
    justify-content: center;
    padding: 8px 10px;
    border-radius: $br-m;
    border: none;
    transition: 0.2s;
    cursor: pointer;
    color: $text-color;
    font-size: $fs-m;
    font-weight: normal !important;

    &:disabled {
        opacity: 0.5;
        cursor: default;
    }

    &.primary {
        background-color: rgba($c1, 0.15);
        color: lighten($c1, 5);

        &:hover {
            background-color: rgba($c1, 0.2);
        }
    }

    &.secondary {
        background-color: $bg-5;
        color: $text-color-15;

        &:hover {
            background-color: $bg-6;
            color: $text-color;
        }
    }

    &.warning {
        background-color: rgba($c-warning, 0.2);
        color: $c-warning;

        &:hover {
            background-color: rgba($c-warning, 0.3);
        }
    }

    &.danger {
        background-color: rgba(236, 55, 82, 0.2);
        color: $c-danger;

        &:hover {
            background-color: rgba(236, 55, 82, 0.3);
        }
    }

    &.lightblue {
        background-color: rgba($c-lightblue, 0.2);
        color: $c-lightblue;

        &:hover {
            background-color: rgba($c-lightblue, 0.3);
        }
    }

    &.yellow {
        background-color: rgba($c-yellow, 0.2);
        color: $c-yellow;

        &:hover {
            background-color: rgba($c-yellow, 0.3);
        }
    }

    &.orange {
        background-color: rgba($c-orange, 0.2);
        color: $c-orange;

        &:hover {
            background-color: rgba($c-orange, 0.3);
        }
    }

    &.t {
        background-color: transparent;
        color: $text-color-2;

        &:hover {
            box-shadow: 0 0 0 4px $bg-5;
            color: $text-color;
        }

        &:active {
            box-shadow: 0 0 0 6px $bg-5;
        }
    }

    &.s {
        font-size: $fs-s;
        padding: 4px 7px;
    }

    &.l {
        font-size: $fs-l;
    }

    &.xl {
        font-size: $fs-xl;
    }

    &.close.last {
        padding: 3px;
    }
}

.window {
    position: fixed;
    top: 100%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    padding: 10px;
    border-radius: $br-m;
    max-height: 98%;
    max-width: 950px;
    width: 95%;
    min-height: 100px;
    overflow-y: scroll;
    z-index: 10;
    background-color: $bg-3;
    transition: all 200ms cubic-bezier(1, 0, 1, 1);
    opacity: 0;
    // posizione iniziale top
    &.pt {
        top: -100%;
    }
    // posizione iniziale sinistra
    &.pl {
        top: 50%;
        right: 100%;
        transform: translate(50%, -50%) scale(0);
        left: unset;

        &.show {
            right: 50%;
            left: unset;
            transform: translate(50%, -50%) scale(1);
        }
    }
    // posizione iniziale destra
    &.pr {
        top: 50%;
        left: 100%;
    }

    &.show {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(1);
        transition: all 200ms cubic-bezier(0, 0, 0, 1);
        opacity: 1;
    }

    &.auto {
        overflow: hidden !important;
        width: auto;
        height: auto;
    }

    // small
    &.s {
        max-width: 400px;
    }

    &.m {
        max-width: 500px;
    }

    /*
    COLORI PRINCIPALI DELLA FINESTRA
    */
    &.lightblue {
        h2 .material-symbols-rounded, h3 .material-symbols-rounded { color: $c-lightblue !important; }
        form {
            label .material-symbols-rounded { color: $c-lightblue !important; }
            .input-text {
                &:hover { box-shadow: 0 0 0 1px rgba($c-lightblue, 0.2); }
                &:focus { box-shadow: 0 0 0 4px rgba($c-lightblue, 0.2); }
            }
        }
        .btn.primary {
            color: $c-lightblue !important;
            background-color: rgba($c-lightblue, 0.2);
        }
    }
    &.yellow {
        h2 .material-symbols-rounded, h3 .material-symbols-rounded { color: $c-yellow !important; }
        form {
            label .material-symbols-rounded { color: $c-yellow !important; }
            .input-text {
                &:hover { box-shadow: 0 0 0 1px rgba($c-yellow, 0.2); }
                &:focus { box-shadow: 0 0 0 4px rgba($c-yellow, 0.2); }
            }
        }
        .btn.primary {
            color: $c-yellow !important;
            background-color: rgba($c-yellow, 0.2);
        }
    }
    &.orange {
        h2 .material-symbols-rounded, h3 .material-symbols-rounded { color: $c-orange !important; }
        form {
            label .material-symbols-rounded { color: $c-orange !important; }
            .input-text {
                &:hover { box-shadow: 0 0 0 1px rgba($c-orange, 0.2); }
                &:focus { box-shadow: 0 0 0 4px rgba($c-orange, 0.2); }
            }
        }
        .btn.primary {
            color: $c-orange !important;
            background-color: rgba($c-orange, 0.2);
        }
    }
}

.isle {
    padding: $br-m;
    border-radius: $br-m;
    // LARGHEZZA
    &.s {
        max-width: 400px;
    }
    &.m {
        max-width: 500px;
    }
    &.l {
        max-width: 600px;
    }
    // BACKGROUND COLOR
    &.bg-1 {
        background-color: $bg-1;
    }
    &.bg-2 {
        background-color: $bg-2;
    }
    &.bg-3 {
        background-color: $bg-3;
    }
    &.bg-4 {
        background-color: $bg-4;
    }
    &.bg-5 {
        background-color: $bg-5;
    }
    &.bg-6 {
        background-color: $bg-6;
    }
    &.bg-7 {
        background-color: $bg-7;
    }
    // BORDER RADIUS
    &.br-m {
        border-radius: $br-m;
    }
    &.br-l {
        border-radius: $br-l;
    }
    &.br-xl {
        border-radius: $br-xl;
    }
}

monospace, .monospace {
    font-family: $monospace;
}

.input-text {
    display: block;
    margin: 0 auto;
    padding: 8px;
    border-radius: $br-m;
    transition: 0.2s;
    outline: none;
    background-color: $bg-1;
    border: none;
    color: $text-color;
    width: 100%;
    font-size: $fs-m;
    resize: none;

    &.fs-l {
        font-size: $fs-l;
    }

    &.uppercase {
        text-transform: uppercase;
    }

    &:read-only {
        cursor: default;
    }

    &[disabled] {
        opacity: 0.5;
        cursor: not-allowed;
        color: $text-color-2;
    }

    &.mfa {
        letter-spacing: 0.5em;
        text-align: center;
        font-family: $monospace;
    }

    &.bg-2 {
        background-color: $bg-3;
    }

    &.mono {
        font-family: $monospace;
    }

    &:hover {
        box-shadow: 0 0 0 1px rgba($c1, 0.2);
    }

    &:focus {
        box-shadow: 0 0 0 4px rgba($c1, 0.2);
    }
}

.input-switch {
    display: inline-block;
    position: relative;
    // -- coefficente per gestire facilmente la dimensione
    $k: 0.6;
    label {
        display: block;
        width: ($k * 4em);
        height: ($k * 2em);
        background-color: $border-color;
        border-radius: ($k * 1.5em);
        cursor: pointer;
        position: relative;
        transition: background-color 0.2s ease;

        &::before {
            content: '';
            position: absolute;
            top: ($k * 0.25em);
            left: ($k * 0.25em);
            width: ($k * 1.5em);
            height: ($k * 1.5em);
            background-color: $text-color;
            border-radius: 50%; 
            transition: left 0.2s ease;
        }

    }
    
    input {
        display: none;
    }

    input:checked + label {
        background-color: rgba($c1, 0.5);
    }

    input:checked + label::before {
        left: ($k * 2.25em); // 1.75em = 32px
    }
}

input[type="range"] {
    appearance: none;
    width: 95%;
    height: 0.2rem;
    outline: none;
    border-radius: 0.2rem;
    display: block;
    margin: 15px auto;
    background-color: $c1;

    &::-webkit-slider-thumb {
        appearance: none;
        width: 1.25rem;
        height: 1.25rem;
        background-color: $c1;
        border: 0.2rem solid $c1;
        background-color: $text-color;
        border-radius: 1.25rem;
        cursor: pointer;
    }
}