/*
cd public/css
sass --watch main.scss:main.css
*/
/*
font e icone
*/
@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&family=Rubik:ital,wght@0,300..900;1,300..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,300,0,0");
:root {
  --text-color: #f5f5f5;
  --text-color-15: #ddd;
  --text-color-2: #888;
  --text-color-21: #555;
}

.theme-earth {
  --c1: #a8af74;
  --c2: #738e54;
  --c3: #35322A;
  --danger: #ee7184;
  --red: #F7A7A0;
  --warning: #eead71;
  --blue: #7dbaff;
  --lightblue: #A8D8FF;
  --yellow: #eec471;
  --orange: #e59e7a;
  --peach: #FFD6A5;
  --purple: #D3B4FF;
  --pink: #FFB7C5;
  --mint: #AEE5D8;
  --lightgray: #E0E0E0;
  --green: #86cd86;
  --olivegreen: #B9D19C;
  --bg-1: #171414;
  --bg-2: rgb(31.1837209302, 27.1162790698, 27.1162790698);
  --bg-3: rgb(39.3674418605, 34.2325581395, 34.2325581395);
  --bg-4: rgb(47.5511627907, 41.3488372093, 41.3488372093);
  --bg-5: rgb(55.7348837209, 48.4651162791, 48.4651162791);
  --bg-6: rgb(63.9186046512, 55.5813953488, 55.5813953488);
  --bg-7: rgb(72.1023255814, 62.6976744186, 62.6976744186);
  --border-color: rgb(88.4697674419, 76.9302325581, 76.9302325581);
  --message-bc: #4d4d3b;
}

.theme-monokai {
  --c1: #96cf0b;
  --c2: #a6e22e;
  --c3: #66d9ef;
  --danger: #f92672;
  --red: #fd6883;
  --warning: #e6db74;
  --blue: #66d9ef;
  --lightblue: #78dce8;
  --yellow: #e6db74;
  --orange: #fd971f;
  --peach: #ffaf87;
  --purple: #a99ae8;
  --pink: #ff6188;
  --mint: #a9dc76;
  --lightgray: #75715e;
  --green: #A6E22E;
  --olivegreen: #829372;
  --bg-1: #221f22;
  --bg-2: rgb(42.0030769231, 38.2969230769, 42.0030769231);
  --bg-3: rgb(50.0061538462, 45.5938461538, 50.0061538462);
  --bg-4: rgb(58.0092307692, 52.8907692308, 58.0092307692);
  --bg-5: rgb(66.0123076923, 60.1876923077, 66.0123076923);
  --bg-6: rgb(74.0153846154, 67.4846153846, 74.0153846154);
  --bg-7: rgb(82.0184615385, 74.7815384615, 82.0184615385);
  --border-color: rgb(98.0246153846, 89.3753846154, 98.0246153846);
  --message-bc: #505e26;
}

.theme-dracula {
  --c1: #50FA7B;
  --c2: #fa50f7;
  --c3: #8BE9FD;
  --danger: #FF5555;
  --red: #FF6E6E;
  --warning: #ffa228;
  --blue: #7485b8;
  --lightblue: #8BE9FD;
  --yellow: #F1FA8C;
  --orange: #FFB86C;
  --peach: #FF9F7E;
  --purple: #BD93F9;
  --pink: #FF79C6;
  --mint: #69DCCF;
  --lightgray: #44475A;
  --green: #50FA7B;
  --olivegreen: #6b8d6e;
  --bg-1: #161B20;
  --bg-2: rgb(28.2333333333, 34.65, 41.0666666667);
  --bg-3: rgb(34.4666666667, 42.3, 50.1333333333);
  --bg-4: rgb(40.7, 49.95, 59.2);
  --bg-5: rgb(46.9333333333, 57.6, 68.2666666667);
  --bg-6: rgb(53.1666666667, 65.25, 77.3333333333);
  --bg-7: rgb(59.4, 72.9, 86.4);
  --border-color: rgb(71.8666666667, 88.2, 104.5333333333);
  --message-bc: #306848;
}

.theme-tokyonight {
  --c1: #82aaff;
  --c2: #c3e88d;
  --c3: #ff98a4;
  --danger: #ff5370;
  --red: #f07178;
  --warning: #ffba6b;
  --blue: #82aaff;
  --lightblue: #89ddff;
  --yellow: #ffcb6b;
  --orange: #f78c6c;
  --peach: #ff9cac;
  --purple: #c792ea;
  --pink: #f071d1;
  --mint: #c3e88d;
  --lightgray: #848bbd;
  --green: #c3e88d;
  --olivegreen: #a3be8c;
  --bg-1: #1a1b26;
  --bg-2: rgb(32.215625, 33.4546875, 47.084375);
  --bg-3: rgb(38.43125, 39.909375, 56.16875);
  --bg-4: rgb(44.646875, 46.3640625, 65.253125);
  --bg-5: rgb(50.8625, 52.81875, 74.3375);
  --bg-6: rgb(57.078125, 59.2734375, 83.421875);
  --bg-7: rgb(63.29375, 65.728125, 92.50625);
  --border-color: rgb(75.725, 78.6375, 110.675);
  --message-bc: #424f74;
}

.theme-cyberpunk {
  --c1: #FFEE58;
  --c2: #00E0E0;
  --c3: #FF007F;
  --danger: #FF3131;
  --red: #FF0055;
  --warning: #FF5E00;
  --blue: #00FFFF;
  --lightblue: #00BFFF;
  --yellow: #FFD700;
  --orange: #FF8800;
  --peach: #FFAE70;
  --purple: #b054e8;
  --pink: #FF00FF;
  --mint: #00FF99;
  --lightgray: #808080;
  --green: #00ff00;
  --olivegreen: #739900;
  --bg-1: #0D0D0D;
  --bg-2: rgb(20.65, 20.65, 20.65);
  --bg-3: rgb(28.3, 28.3, 28.3);
  --bg-4: rgb(35.95, 35.95, 35.95);
  --bg-5: rgb(43.6, 43.6, 43.6);
  --bg-6: rgb(51.25, 51.25, 51.25);
  --bg-7: rgb(58.9, 58.9, 58.9);
  --border-color: rgb(74.2, 74.2, 74.2);
  --message-bc: #615b2e;
}

.theme-ocean {
  --c1: #A8C5DA;
  --c2: #AEE5D8;
  --c3: #F3D5B5;
  --danger: #E8A39B;
  --red: #F7B6A3;
  --warning: #F4CFA0;
  --blue: #A8C5DA;
  --lightblue: #D0E7F2;
  --yellow: #ebd895;
  --orange: #EFB797;
  --peach: #FFD6B5;
  --purple: #D3B4FF;
  --pink: #FFB7C5;
  --mint: #BFE2C5;
  --lightgray: #EAEAEA;
  --green: #5ADEA8;
  --olivegreen: #C4D7A1;
  --bg-1: #11151b;
  --bg-2: rgb(22.9113636364, 28.3022727273, 36.3886363636);
  --bg-3: rgb(28.8227272727, 35.6045454545, 45.7772727273);
  --bg-4: rgb(34.7340909091, 42.9068181818, 55.1659090909);
  --bg-5: rgb(40.6454545455, 50.2090909091, 64.5545454545);
  --bg-6: rgb(46.5568181818, 57.5113636364, 73.9431818182);
  --bg-7: rgb(52.4681818182, 64.8136363636, 83.3318181818);
  --border-color: rgb(95.8181818182, 118.3636363636, 152.1818181818);
  --message-bc: #465461;
}

.theme-sunset {
  --c1: #d3755e;
  --c2: #FDCB82;
  --c3: #F5B56D;
  --danger: #FF5E3A;
  --red: #F77F5B;
  --warning: #F4A261;
  --blue: #5B8FB9;
  --lightblue: #A4D1E6;
  --yellow: #F2C14D;
  --orange: #FF7E29;
  --peach: #FF9F82;
  --purple: #9B68A2;
  --pink: #F1A7D3;
  --mint: #A7D8C6;
  --lightgray: #E0D4C9;
  --green: #A1E44D;
  --olivegreen: #B4A766;
  --bg-1: #181110;
  --bg-2: rgb(33.18, 23.5025, 22.12);
  --bg-3: rgb(42.36, 30.005, 28.24);
  --bg-4: rgb(51.54, 36.5075, 34.36);
  --bg-5: rgb(60.72, 43.01, 40.48);
  --bg-6: rgb(69.9, 49.5125, 46.6);
  --bg-7: rgb(79.08, 56.015, 52.72);
  --border-color: rgb(97.44, 69.02, 64.96);
  --message-bc: #5c3830;
}

.theme-blossom {
  --c1: #EEC7C2;
  --c2: #F7D5CC;
  --c3: #D4A5C6;
  --danger: #E89DA5;
  --red: #F5B2A8;
  --warning: #f5c3a1;
  --blue: #C3DDFD;
  --lightblue: #D7E3FC;
  --yellow: #FAE3B0;
  --orange: #F6BEA2;
  --peach: #FFD6B5;
  --purple: #D3B4FF;
  --pink: #FFB7C5;
  --mint: #BFE2C5;
  --lightgray: #F0E8E6;
  --green: #A3D977;
  --olivegreen: #C4D7A1;
  --bg-1: #221E22;
  --bg-2: rgb(42.128125, 37.171875, 42.128125);
  --bg-3: rgb(50.25625, 44.34375, 50.25625);
  --bg-4: rgb(58.384375, 51.515625, 58.384375);
  --bg-5: rgb(66.5125, 58.6875, 66.5125);
  --bg-6: rgb(74.640625, 65.859375, 74.640625);
  --bg-7: rgb(82.76875, 73.03125, 82.76875);
  --border-color: rgb(99.025, 87.375, 99.025);
  --message-bc: #6a5b5d;
}

.theme-cloud {
  --c1: #1E3A5F;
  --c2: #345C85;
  --c3: #4F769D;
  --danger: #D43F52;
  --red: #C7434D;
  --warning: #D98E00;
  --blue: #2C5E96;
  --lightblue: #4A87C2;
  --yellow: #CC8800;
  --orange: #B85C2F;
  --peach: #D48055;
  --purple: #7747A6;
  --pink: #B24C7B;
  --mint: #4D8B74;
  --lightgray: #B0B0B0;
  --green: #56933d;
  --olivegreen: #5D7440;
  --bg-1: #f3f5f6;
  --bg-2: rgb(231.3428571429, 235.2857142857, 237.2571428571);
  --bg-3: rgb(219.6857142857, 225.5714285714, 228.5142857143);
  --bg-4: rgb(208.0285714286, 215.8571428571, 219.7714285714);
  --bg-5: rgb(196.3714285714, 206.1428571429, 211.0285714286);
  --bg-6: rgb(184.7142857143, 196.4285714286, 202.2857142857);
  --bg-7: rgb(173.0571428571, 186.7142857143, 193.5428571429);
  --border-color: rgb(155.5714285714, 172.1428571429, 180.4285714286);
  --message-bc: #a3afbd;
  --text-color: #111;
  --text-color-15: #333;
  --text-color-2: #666;
  --text-color-21: #555;
}

* {
  box-sizing: border-box;
  font-family: "Rubik", sans-serif;
}

html {
  padding: 0;
  border: 0;
  scroll-behavior: smooth;
}

body {
  padding: 0;
  border: 0;
  background-color: var(--bg-1);
  color: var(--text-color);
  font-family: "Rubik", sans-serif !important;
}

.pagina {
  display: block;
  margin: 0 auto;
  margin-bottom: 25px;
  margin-top: 75px;
  max-width: 700px;
  width: 98%;
}

.material-symbols-rounded {
  font-size: 1.3em;
}

::-webkit-scrollbar {
  display: none;
}

.title-icon,
label,
.label {
  display: flex;
  gap: 5px;
  align-items: center;
}

label,
.label {
  margin: 7px 0 7px 0;
}
label .material-symbols-rounded,
.label .material-symbols-rounded {
  color: var(--c1);
}
label input.input-text,
.label input.input-text {
  margin: 0;
  padding: 3px;
  background-color: transparent;
}

.flex {
  display: flex !important;
}
.flex .fg-1 {
  flex-grow: 1;
}
.flex .fg-2 {
  flex-grow: 2;
}
.flex .fg-3 {
  flex-grow: 3;
}
.flex .fg-4 {
  flex-grow: 4;
}
.flex .fg-5 {
  flex-grow: 5;
}
.flex .fg-6 {
  flex-grow: 6;
}
.flex .fg-7 {
  flex-grow: 7;
}
.flex .fg-8 {
  flex-grow: 8;
}
.flex .fg-9 {
  flex-grow: 9;
}
.flex .fg-10 {
  flex-grow: 10;
}
.flex.gap-25 {
  gap: 2.5px !important;
}
.flex.gap-50 {
  gap: 5px !important;
}
.flex.gap-75 {
  gap: 7.5px !important;
}
.flex.gap-100 {
  gap: 10px !important;
}
.flex.gap-125 {
  gap: 12.5px !important;
}
.flex.gap-150 {
  gap: 15px !important;
}
.flex.gap-175 {
  gap: 17.5px !important;
}
.flex.gap-200 {
  gap: 20px !important;
}
.flex.gap-225 {
  gap: 22.5px !important;
}
.flex.gap-250 {
  gap: 25px !important;
}
.flex.gap-275 {
  gap: 27.5px !important;
}
.flex.d-row {
  flex-direction: row;
}
.flex.d-column {
  flex-direction: column;
}
.flex.x-right {
  justify-content: right;
}
.flex.y-center {
  align-items: center;
}
.flex.x-center {
  justify-content: center;
}
.flex.stretch {
  justify-content: stretch;
}
.flex.wrap {
  flex-wrap: wrap;
}
.flex.wrap.reverse {
  flex-wrap: wrap-reverse;
}
.flex.wrap.no {
  flex-wrap: nowrap;
}
.flex .last {
  margin-left: auto;
}

.m-0 {
  margin: 0px !important;
}

.mt-0 {
  margin-top: 0px !important;
}

.mr-0 {
  margin-right: 0px !important;
}

.mb-0 {
  margin-bottom: 0px !important;
}

.ml-0 {
  margin-left: 0px !important;
}

.mx-0 {
  margin-left: 0px !important;
  margin-right: 0px !important;
}

.my-0 {
  margin-top: 0px !important;
  margin-bottom: 0px !important;
}

.m-1 {
  margin: 0.25rem !important;
}

.mt-1 {
  margin-top: 0.25rem !important;
}

.mr-1 {
  margin-right: 0.25rem !important;
}

.mb-1 {
  margin-bottom: 0.25rem !important;
}

.ml-1 {
  margin-left: 0.25rem !important;
}

.mx-1 {
  margin-left: 0.25rem !important;
  margin-right: 0.25rem !important;
}

.my-1 {
  margin-top: 0.25rem !important;
  margin-bottom: 0.25rem !important;
}

.m-2 {
  margin: 0.5rem !important;
}

.mt-2 {
  margin-top: 0.5rem !important;
}

.mr-2 {
  margin-right: 0.5rem !important;
}

.mb-2 {
  margin-bottom: 0.5rem !important;
}

.ml-2 {
  margin-left: 0.5rem !important;
}

.mx-2 {
  margin-left: 0.5rem !important;
  margin-right: 0.5rem !important;
}

.my-2 {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}

.m-3 {
  margin: 0.75rem !important;
}

.mt-3 {
  margin-top: 0.75rem !important;
}

.mr-3 {
  margin-right: 0.75rem !important;
}

.mb-3 {
  margin-bottom: 0.75rem !important;
}

.ml-3 {
  margin-left: 0.75rem !important;
}

.mx-3 {
  margin-left: 0.75rem !important;
  margin-right: 0.75rem !important;
}

.my-3 {
  margin-top: 0.75rem !important;
  margin-bottom: 0.75rem !important;
}

.m-4 {
  margin: 1rem !important;
}

.mt-4 {
  margin-top: 1rem !important;
}

.mr-4 {
  margin-right: 1rem !important;
}

.mb-4 {
  margin-bottom: 1rem !important;
}

.ml-4 {
  margin-left: 1rem !important;
}

.mx-4 {
  margin-left: 1rem !important;
  margin-right: 1rem !important;
}

.my-4 {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}

.m-5 {
  margin: 1.25rem !important;
}

.mt-5 {
  margin-top: 1.25rem !important;
}

.mr-5 {
  margin-right: 1.25rem !important;
}

.mb-5 {
  margin-bottom: 1.25rem !important;
}

.ml-5 {
  margin-left: 1.25rem !important;
}

.mx-5 {
  margin-left: 1.25rem !important;
  margin-right: 1.25rem !important;
}

.my-5 {
  margin-top: 1.25rem !important;
  margin-bottom: 1.25rem !important;
}

.m-6 {
  margin: 1.5rem !important;
}

.mt-6 {
  margin-top: 1.5rem !important;
}

.mr-6 {
  margin-right: 1.5rem !important;
}

.mb-6 {
  margin-bottom: 1.5rem !important;
}

.ml-6 {
  margin-left: 1.5rem !important;
}

.mx-6 {
  margin-left: 1.5rem !important;
  margin-right: 1.5rem !important;
}

.my-6 {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}

.none {
  display: none;
}

h1,
h2,
h3,
h4,
h5 {
  display: flex;
  align-items: center;
  gap: 5px;
  margin: 0.5em 0 0.3em 0;
}
h1.icon .material-symbols-rounded,
h2.icon .material-symbols-rounded,
h3.icon .material-symbols-rounded,
h4.icon .material-symbols-rounded,
h5.icon .material-symbols-rounded {
  color: var(--c1);
}
h1.icon .material-symbols-rounded.warning,
h2.icon .material-symbols-rounded.warning,
h3.icon .material-symbols-rounded.warning,
h4.icon .material-symbols-rounded.warning,
h5.icon .material-symbols-rounded.warning {
  color: var(--warning) !important;
}
h1.icon .material-symbols-rounded.danger,
h2.icon .material-symbols-rounded.danger,
h3.icon .material-symbols-rounded.danger,
h4.icon .material-symbols-rounded.danger,
h5.icon .material-symbols-rounded.danger {
  color: var(--danger) !important;
}
h1.unbold,
h2.unbold,
h3.unbold,
h4.unbold,
h5.unbold {
  font-weight: normal;
}
h1 .logo,
h2 .logo,
h3 .logo,
h4 .logo,
h5 .logo {
  width: 36px;
  margin: 5px;
}
h1.code,
h2.code,
h3.code,
h4.code,
h5.code {
  font-family: "JetBrains Mono", monospace;
  justify-content: center;
  letter-spacing: 10px;
  color: var(--c1);
}

.color.warn {
  color: var(--warning) !important;
}
.color.danger {
  color: var(--danger) !important;
}
.color.primary {
  color: var(--c1) !important;
}
.color.purple {
  color: var(--purple) !important;
}

p {
  font-size: 1em;
  color: var(--text-color);
  margin: 0.5em auto;
  line-height: 1.5;
}
p a {
  color: var(--c2);
  text-decoration: none;
  border-bottom: 1px dashed var(--c2);
  cursor: pointer;
}
p a:hover {
  border-bottom: 1px solid var(--c2);
}
p b {
  color: var(--c1);
  font-weight: normal;
}
p.center {
  text-align: center;
}
p.secondary {
  color: var(--text-color-2);
}
p.description {
  color: var(--text-color-2);
  font-size: 0.9em;
}

p.report {
  padding: 8px;
  border-radius: 8px;
  font-family: "JetBrains Mono", monospace;
}
p.report.success {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 90%);
  color: var(--olivegreen);
}
p.report.warning {
  background-color: color-mix(in srgb, var(--warning), transparent 90%);
  color: var(--warning);
}
p.report.danger {
  background-color: color-mix(in srgb, var(--danger), transparent 90%);
  color: var(--danger);
}

colored {
  color: var(--c1);
}

.fs-l {
  font-size: 1.2em;
}

.slider {
  cursor: pointer;
}

.w-100 {
  width: 100%;
}

hr {
  margin: 0.8rem 0;
  color: var(--border-color);
  border: 0;
  border-top: 1px solid var(--border-color);
}
hr.dashed {
  background-color: transparent;
  border-bottom: 1px dashed var(--border-color);
}
hr.s {
  width: 90%;
}

.btn {
  display: flex;
  align-items: center;
  gap: 5px;
  justify-content: center;
  padding: 8px 10px;
  border-radius: 8px;
  border: none;
  transition: 0.2s;
  cursor: pointer;
  color: var(--text-color);
  font-size: 1em;
  font-weight: normal !important;
}
.btn:disabled {
  opacity: 0.5;
  cursor: default;
}
.btn.gap-0 {
  gap: 0;
}
.btn.primary {
  background-color: color-mix(in srgb, var(--c1), transparent 85%);
  color: var(--c1);
}
.btn.primary:hover {
  background-color: color-mix(in srgb, var(--c1), transparent 80%);
}
.btn.secondary {
  background-color: var(--bg-5);
  color: var(--text-color-15);
}
.btn.secondary:hover {
  background-color: var(--bg-6);
  color: var(--text-color);
}
.btn.warning {
  background-color: color-mix(in srgb, var(--warning), transparent 80%);
  color: var(--warning);
}
.btn.warning:hover {
  background-color: color-mix(in srgb, var(--warning), transparent 70%);
}
.btn.danger {
  background-color: color-mix(in srgb, var(--danger), transparent 80%);
  color: var(--danger);
}
.btn.danger:hover {
  background-color: color-mix(in srgb, var(--danger), transparent 70%);
}
.btn.red {
  background-color: color-mix(in srgb, var(--red), transparent 80%);
  color: var(--red);
}
.btn.red:hover {
  background-color: color-mix(in srgb, var(--red), transparent 70%);
}
.btn.yellow {
  background-color: color-mix(in srgb, var(--yellow), transparent 80%);
  color: var(--yellow);
}
.btn.yellow:hover {
  background-color: color-mix(in srgb, var(--yellow), transparent 70%);
}
.btn.green {
  background-color: color-mix(in srgb, var(--green), transparent 80%);
  color: var(--green);
}
.btn.green:hover {
  background-color: color-mix(in srgb, var(--green), transparent 70%);
}
.btn.orange {
  background-color: color-mix(in srgb, var(--orange), transparent 80%);
  color: var(--orange);
}
.btn.orange:hover {
  background-color: color-mix(in srgb, var(--orange), transparent 70%);
}
.btn.peach {
  background-color: color-mix(in srgb, var(--peach), transparent 80%);
  color: var(--peach);
}
.btn.peach:hover {
  background-color: color-mix(in srgb, var(--peach), transparent 70%);
}
.btn.purple {
  background-color: color-mix(in srgb, var(--purple), transparent 80%);
  color: var(--purple);
}
.btn.purple:hover {
  background-color: color-mix(in srgb, var(--purple), transparent 70%);
}
.btn.pink {
  background-color: color-mix(in srgb, var(--pink), transparent 80%);
  color: var(--pink);
}
.btn.pink:hover {
  background-color: color-mix(in srgb, var(--pink), transparent 70%);
}
.btn.mint {
  background-color: color-mix(in srgb, var(--mint), transparent 80%);
  color: var(--mint);
}
.btn.mint:hover {
  background-color: color-mix(in srgb, var(--mint), transparent 70%);
}
.btn.blue {
  background-color: color-mix(in srgb, var(--blue), transparent 80%);
  color: var(--blue);
}
.btn.blue:hover {
  background-color: color-mix(in srgb, var(--blue), transparent 70%);
}
.btn.lightblue {
  background-color: color-mix(in srgb, var(--lightblue), transparent 80%);
  color: var(--lightblue);
}
.btn.lightblue:hover {
  background-color: color-mix(in srgb, var(--lightblue), transparent 70%);
}
.btn.lightgray {
  background-color: color-mix(in srgb, var(--lightgray), transparent 80%);
  color: var(--lightgray);
}
.btn.lightgray:hover {
  background-color: color-mix(in srgb, var(--lightgray), transparent 70%);
}
.btn.olivegreen {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 80%);
  color: var(--olivegreen);
}
.btn.olivegreen:hover {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 70%);
}
.btn.t {
  background-color: transparent;
  color: var(--text-color-2);
}
.btn.t:hover {
  box-shadow: 0 0 0 4px var(--bg-5);
  color: var(--text-color);
}
.btn.t:active {
  box-shadow: 0 0 0 6px var(--bg-5);
}
.btn.s {
  font-size: 0.9em;
  padding: 4px 7px;
}
.btn.l {
  font-size: 1.2em;
}
.btn.xl {
  font-size: 1.5em;
}
.btn.close.last {
  padding: 3px;
}

.window {
  position: fixed;
  top: 100%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  padding: 10px;
  border-radius: 14px;
  max-height: calc(100% - 20px);
  max-width: 950px;
  width: calc(100% - 20px);
  min-height: 100px;
  overflow-y: scroll;
  z-index: 10;
  background-color: var(--bg-3);
  transition: all 200ms cubic-bezier(1, 0, 1, 1);
  opacity: 0;
}
.window.pt {
  top: -100%;
}
.window.pl {
  top: 50%;
  right: 100%;
  transform: translate(50%, -50%) scale(0);
  left: unset;
}
.window.pl.show {
  right: 50%;
  left: unset;
  transform: translate(50%, -50%) scale(1);
}
.window.pr {
  top: 50%;
  left: 100%;
}
.window.show {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1);
  transition: all 200ms cubic-bezier(0, 0, 0, 1);
  opacity: 1;
}
.window.auto {
  overflow: hidden !important;
  width: auto;
  height: auto;
}
.window.s {
  max-width: 400px;
}
.window.m {
  max-width: 500px;
}

.maincolor {
  /*
  COLORI PRINCIPALI
  */
}
.maincolor.red h1 .material-symbols-rounded,
.maincolor.red h2 .material-symbols-rounded,
.maincolor.red h3 .material-symbols-rounded,
.maincolor.red h4 .material-symbols-rounded {
  color: var(--red);
}
.maincolor.red p colored {
  color: var(--red);
}
.maincolor.red label .material-symbols-rounded {
  color: var(--red);
}
.maincolor.red .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--red), transparent 80%);
}
.maincolor.red .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--red), transparent 80%);
}
.maincolor.red .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--red), transparent 80%);
}
.maincolor.red .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--red), transparent 80%);
}
.maincolor.red .btn.primary {
  color: var(--red) !important;
  background-color: color-mix(in srgb, var(--red), transparent 80%);
}
.maincolor.red .btn.primary:hover {
  background-color: color-mix(in srgb, var(--red), transparent 70%);
}
.maincolor.red .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--red), transparent 50%);
}
.maincolor.yellow h1 .material-symbols-rounded,
.maincolor.yellow h2 .material-symbols-rounded,
.maincolor.yellow h3 .material-symbols-rounded,
.maincolor.yellow h4 .material-symbols-rounded {
  color: var(--yellow);
}
.maincolor.yellow p colored {
  color: var(--yellow);
}
.maincolor.yellow label .material-symbols-rounded {
  color: var(--yellow);
}
.maincolor.yellow .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--yellow), transparent 80%);
}
.maincolor.yellow .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--yellow), transparent 80%);
}
.maincolor.yellow .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--yellow), transparent 80%);
}
.maincolor.yellow .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--yellow), transparent 80%);
}
.maincolor.yellow .btn.primary {
  color: var(--yellow) !important;
  background-color: color-mix(in srgb, var(--yellow), transparent 80%);
}
.maincolor.yellow .btn.primary:hover {
  background-color: color-mix(in srgb, var(--yellow), transparent 70%);
}
.maincolor.yellow .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--yellow), transparent 50%);
}
.maincolor.green h1 .material-symbols-rounded,
.maincolor.green h2 .material-symbols-rounded,
.maincolor.green h3 .material-symbols-rounded,
.maincolor.green h4 .material-symbols-rounded {
  color: var(--green);
}
.maincolor.green p colored {
  color: var(--green);
}
.maincolor.green label .material-symbols-rounded {
  color: var(--green);
}
.maincolor.green .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--green), transparent 80%);
}
.maincolor.green .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--green), transparent 80%);
}
.maincolor.green .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--green), transparent 80%);
}
.maincolor.green .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--green), transparent 80%);
}
.maincolor.green .btn.primary {
  color: var(--green) !important;
  background-color: color-mix(in srgb, var(--green), transparent 80%);
}
.maincolor.green .btn.primary:hover {
  background-color: color-mix(in srgb, var(--green), transparent 70%);
}
.maincolor.green .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--green), transparent 50%);
}
.maincolor.orange h1 .material-symbols-rounded,
.maincolor.orange h2 .material-symbols-rounded,
.maincolor.orange h3 .material-symbols-rounded,
.maincolor.orange h4 .material-symbols-rounded {
  color: var(--orange);
}
.maincolor.orange p colored {
  color: var(--orange);
}
.maincolor.orange label .material-symbols-rounded {
  color: var(--orange);
}
.maincolor.orange .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--orange), transparent 80%);
}
.maincolor.orange .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--orange), transparent 80%);
}
.maincolor.orange .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--orange), transparent 80%);
}
.maincolor.orange .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--orange), transparent 80%);
}
.maincolor.orange .btn.primary {
  color: var(--orange) !important;
  background-color: color-mix(in srgb, var(--orange), transparent 80%);
}
.maincolor.orange .btn.primary:hover {
  background-color: color-mix(in srgb, var(--orange), transparent 70%);
}
.maincolor.orange .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--orange), transparent 50%);
}
.maincolor.peach h1 .material-symbols-rounded,
.maincolor.peach h2 .material-symbols-rounded,
.maincolor.peach h3 .material-symbols-rounded,
.maincolor.peach h4 .material-symbols-rounded {
  color: var(--peach);
}
.maincolor.peach p colored {
  color: var(--peach);
}
.maincolor.peach label .material-symbols-rounded {
  color: var(--peach);
}
.maincolor.peach .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--peach), transparent 80%);
}
.maincolor.peach .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--peach), transparent 80%);
}
.maincolor.peach .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--peach), transparent 80%);
}
.maincolor.peach .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--peach), transparent 80%);
}
.maincolor.peach .btn.primary {
  color: var(--peach) !important;
  background-color: color-mix(in srgb, var(--peach), transparent 80%);
}
.maincolor.peach .btn.primary:hover {
  background-color: color-mix(in srgb, var(--peach), transparent 70%);
}
.maincolor.peach .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--peach), transparent 50%);
}
.maincolor.purple h1 .material-symbols-rounded,
.maincolor.purple h2 .material-symbols-rounded,
.maincolor.purple h3 .material-symbols-rounded,
.maincolor.purple h4 .material-symbols-rounded {
  color: var(--purple);
}
.maincolor.purple p colored {
  color: var(--purple);
}
.maincolor.purple label .material-symbols-rounded {
  color: var(--purple);
}
.maincolor.purple .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--purple), transparent 80%);
}
.maincolor.purple .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--purple), transparent 80%);
}
.maincolor.purple .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--purple), transparent 80%);
}
.maincolor.purple .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--purple), transparent 80%);
}
.maincolor.purple .btn.primary {
  color: var(--purple) !important;
  background-color: color-mix(in srgb, var(--purple), transparent 80%);
}
.maincolor.purple .btn.primary:hover {
  background-color: color-mix(in srgb, var(--purple), transparent 70%);
}
.maincolor.purple .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--purple), transparent 50%);
}
.maincolor.pink h1 .material-symbols-rounded,
.maincolor.pink h2 .material-symbols-rounded,
.maincolor.pink h3 .material-symbols-rounded,
.maincolor.pink h4 .material-symbols-rounded {
  color: var(--pink);
}
.maincolor.pink p colored {
  color: var(--pink);
}
.maincolor.pink label .material-symbols-rounded {
  color: var(--pink);
}
.maincolor.pink .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--pink), transparent 80%);
}
.maincolor.pink .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--pink), transparent 80%);
}
.maincolor.pink .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--pink), transparent 80%);
}
.maincolor.pink .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--pink), transparent 80%);
}
.maincolor.pink .btn.primary {
  color: var(--pink) !important;
  background-color: color-mix(in srgb, var(--pink), transparent 80%);
}
.maincolor.pink .btn.primary:hover {
  background-color: color-mix(in srgb, var(--pink), transparent 70%);
}
.maincolor.pink .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--pink), transparent 50%);
}
.maincolor.mint h1 .material-symbols-rounded,
.maincolor.mint h2 .material-symbols-rounded,
.maincolor.mint h3 .material-symbols-rounded,
.maincolor.mint h4 .material-symbols-rounded {
  color: var(--mint);
}
.maincolor.mint p colored {
  color: var(--mint);
}
.maincolor.mint label .material-symbols-rounded {
  color: var(--mint);
}
.maincolor.mint .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--mint), transparent 80%);
}
.maincolor.mint .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--mint), transparent 80%);
}
.maincolor.mint .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--mint), transparent 80%);
}
.maincolor.mint .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--mint), transparent 80%);
}
.maincolor.mint .btn.primary {
  color: var(--mint) !important;
  background-color: color-mix(in srgb, var(--mint), transparent 80%);
}
.maincolor.mint .btn.primary:hover {
  background-color: color-mix(in srgb, var(--mint), transparent 70%);
}
.maincolor.mint .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--mint), transparent 50%);
}
.maincolor.blue h1 .material-symbols-rounded,
.maincolor.blue h2 .material-symbols-rounded,
.maincolor.blue h3 .material-symbols-rounded,
.maincolor.blue h4 .material-symbols-rounded {
  color: var(--blue);
}
.maincolor.blue p colored {
  color: var(--blue);
}
.maincolor.blue label .material-symbols-rounded {
  color: var(--blue);
}
.maincolor.blue .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--blue), transparent 80%);
}
.maincolor.blue .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--blue), transparent 80%);
}
.maincolor.blue .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--blue), transparent 80%);
}
.maincolor.blue .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--blue), transparent 80%);
}
.maincolor.blue .btn.primary {
  color: var(--blue) !important;
  background-color: color-mix(in srgb, var(--blue), transparent 80%);
}
.maincolor.blue .btn.primary:hover {
  background-color: color-mix(in srgb, var(--blue), transparent 70%);
}
.maincolor.blue .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--blue), transparent 50%);
}
.maincolor.lightblue h1 .material-symbols-rounded,
.maincolor.lightblue h2 .material-symbols-rounded,
.maincolor.lightblue h3 .material-symbols-rounded,
.maincolor.lightblue h4 .material-symbols-rounded {
  color: var(--lightblue);
}
.maincolor.lightblue p colored {
  color: var(--lightblue);
}
.maincolor.lightblue label .material-symbols-rounded {
  color: var(--lightblue);
}
.maincolor.lightblue .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--lightblue), transparent 80%);
}
.maincolor.lightblue .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--lightblue), transparent 80%);
}
.maincolor.lightblue .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--lightblue), transparent 80%);
}
.maincolor.lightblue .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--lightblue), transparent 80%);
}
.maincolor.lightblue .btn.primary {
  color: var(--lightblue) !important;
  background-color: color-mix(in srgb, var(--lightblue), transparent 80%);
}
.maincolor.lightblue .btn.primary:hover {
  background-color: color-mix(in srgb, var(--lightblue), transparent 70%);
}
.maincolor.lightblue .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--lightblue), transparent 50%);
}
.maincolor.lightgray h1 .material-symbols-rounded,
.maincolor.lightgray h2 .material-symbols-rounded,
.maincolor.lightgray h3 .material-symbols-rounded,
.maincolor.lightgray h4 .material-symbols-rounded {
  color: var(--lightgray);
}
.maincolor.lightgray p colored {
  color: var(--lightgray);
}
.maincolor.lightgray label .material-symbols-rounded {
  color: var(--lightgray);
}
.maincolor.lightgray .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--lightgray), transparent 80%);
}
.maincolor.lightgray .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--lightgray), transparent 80%);
}
.maincolor.lightgray .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--lightgray), transparent 80%);
}
.maincolor.lightgray .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--lightgray), transparent 80%);
}
.maincolor.lightgray .btn.primary {
  color: var(--lightgray) !important;
  background-color: color-mix(in srgb, var(--lightgray), transparent 80%);
}
.maincolor.lightgray .btn.primary:hover {
  background-color: color-mix(in srgb, var(--lightgray), transparent 70%);
}
.maincolor.lightgray .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--lightgray), transparent 50%);
}
.maincolor.olivegreen h1 .material-symbols-rounded,
.maincolor.olivegreen h2 .material-symbols-rounded,
.maincolor.olivegreen h3 .material-symbols-rounded,
.maincolor.olivegreen h4 .material-symbols-rounded {
  color: var(--olivegreen);
}
.maincolor.olivegreen p colored {
  color: var(--olivegreen);
}
.maincolor.olivegreen label .material-symbols-rounded {
  color: var(--olivegreen);
}
.maincolor.olivegreen .input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--olivegreen), transparent 80%);
}
.maincolor.olivegreen .input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--olivegreen), transparent 80%);
}
.maincolor.olivegreen .container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--olivegreen), transparent 80%);
}
.maincolor.olivegreen .container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--olivegreen), transparent 80%);
}
.maincolor.olivegreen .btn.primary {
  color: var(--olivegreen) !important;
  background-color: color-mix(in srgb, var(--olivegreen), transparent 80%);
}
.maincolor.olivegreen .btn.primary:hover {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 70%);
}
.maincolor.olivegreen .input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 50%);
}

.isle {
  padding: 8px;
  border-radius: 8px;
}
.isle.s {
  max-width: 400px;
}
.isle.m {
  max-width: 500px;
}
.isle.l {
  max-width: 600px;
}
.isle.bg-1 {
  background-color: var(--bg-1);
}
.isle.bg-2 {
  background-color: var(--bg-2);
}
.isle.bg-3 {
  background-color: var(--bg-3);
}
.isle.bg-4 {
  background-color: var(--bg-4);
}
.isle.bg-5 {
  background-color: var(--bg-5);
}
.isle.bg-6 {
  background-color: var(--bg-6);
}
.isle.bg-7 {
  background-color: var(--bg-7);
}
.isle.br-m {
  border-radius: 8px;
}
.isle.br-l {
  border-radius: 14px;
}
.isle.br-xl {
  border-radius: 23px;
}

.alert {
  padding: 8px;
  border-radius: 8px;
  display: flex;
  gap: 10px;
  align-items: center;
  flex-direction: row;
}
.alert .icon {
  font-size: 1.7em;
  margin-left: 2px;
}
.alert p {
  margin: 0;
}
.alert.danger {
  background-color: color-mix(in srgb, var(--red), transparent 90%);
  color: var(--red) !important;
}
.alert.danger p {
  color: var(--red);
}
.alert.warning {
  background-color: color-mix(in srgb, var(--warning), transparent 90%);
  color: var(--warning) !important;
}
.alert.warning p {
  color: var(--warning);
}
.alert.success {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 90%);
  color: var(--olivegreen) !important;
}
.alert.success p {
  color: var(--olivegreen);
}

.trans.rotate._90 {
  transform: rotate(90deg);
}
.trans.rotate._180 {
  transform: rotate(180deg);
}

monospace,
.monospace {
  font-family: "JetBrains Mono", monospace;
}

.mfa {
  font-family: "JetBrains Mono", monospace;
  letter-spacing: 5px;
  font-weight: normal;
}

input[type=password] {
  font-family: "JetBrains Mono", monospace !important;
}

.input-text,
.container-input-text {
  display: block;
  margin: 0 auto;
  padding: 8px;
  border-radius: 8px;
  transition: 0.2s;
  outline: none;
  background-color: var(--bg-1);
  border: none;
  color: var(--text-color);
  width: 100%;
  font-size: 1em;
  resize: none;
}
.input-text.color,
.container-input-text.color {
  margin: 0;
  width: 40px;
  height: 40px;
  padding: 4px;
}
.input-text.fs-l,
.container-input-text.fs-l {
  font-size: 1.2em;
}
.input-text.nb,
.container-input-text.nb {
  border-radius: 0;
}
.input-text.uppercase,
.container-input-text.uppercase {
  text-transform: uppercase;
}
.input-text:read-only,
.container-input-text:read-only {
  cursor: default;
}
.input-text[disabled],
.container-input-text[disabled] {
  opacity: 0.5;
  cursor: not-allowed;
  color: var(--text-color-2);
}
.input-text.mfa,
.container-input-text.mfa {
  letter-spacing: 0.5em;
  text-align: center;
  font-family: "JetBrains Mono", monospace;
}
.input-text.bg-2,
.container-input-text.bg-2 {
  background-color: var(--bg-3);
}
.input-text.mono,
.container-input-text.mono {
  font-family: "JetBrains Mono", monospace;
}

.container-input-text {
  padding: 0;
  overflow: hidden;
}
.container-input-text textarea {
  display: block;
  border: none;
  outline: none;
  border-radius: 0;
  background-color: transparent;
  color: var(--text-color);
  font-size: 1em;
  width: 100%;
  margin: 0;
  padding: 8px;
  resize: none;
}
.container-input-text:has(textarea:hover) {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--c1), transparent 80%);
}
.container-input-text:has(textarea:focus) {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--c1), transparent 80%);
}

.input-text:hover {
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--c1), transparent 80%);
}
.input-text:focus {
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--c1), transparent 80%);
}

.input-switch {
  display: inline-block;
  position: relative;
}
.input-switch label {
  display: block;
  width: 2.4em;
  height: 1.2em;
  background-color: var(--border-color);
  border-radius: 0.9em;
  cursor: pointer;
  position: relative;
  transition: background-color 0.2s ease;
}
.input-switch label::before {
  content: "";
  position: absolute;
  top: 0.15em;
  left: 0.15em;
  width: 0.9em;
  height: 0.9em;
  background-color: var(--text-color);
  border-radius: 50%;
  transition: left 0.2s ease;
}
.input-switch input {
  display: none;
}
.input-switch input:checked + label {
  background-color: color-mix(in srgb, var(--c1), transparent 50%);
}
.input-switch input:checked + label::before {
  left: 1.35em;
}

input[type=range] {
  appearance: none;
  width: 95%;
  height: 0.2rem;
  outline: none;
  border-radius: 0.2rem;
  display: block;
  margin: 15px auto;
  background-color: var(--c1);
}
input[type=range]::-webkit-slider-thumb {
  appearance: none;
  width: 1.25rem;
  height: 1.25rem;
  background-color: var(--c1);
  border: 0.2rem solid var(--c1);
  background-color: var(--text-color);
  border-radius: 1.25rem;
  cursor: pointer;
}

.navbar {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}
.navbar a {
  padding: 10px;
  display: flex;
  align-items: center;
  gap: 5px;
  color: var(--text-color);
  text-decoration: none;
  border-radius: 5px;
  transition: 0.1s;
  cursor: pointer;
}
.navbar a.red span {
  color: var(--red);
}
.navbar a.red:hover {
  background-color: color-mix(in srgb, var(--red), transparent 90%);
}
.navbar a.yellow span {
  color: var(--yellow);
}
.navbar a.yellow:hover {
  background-color: color-mix(in srgb, var(--yellow), transparent 90%);
}
.navbar a.green span {
  color: var(--green);
}
.navbar a.green:hover {
  background-color: color-mix(in srgb, var(--green), transparent 90%);
}
.navbar a.orange span {
  color: var(--orange);
}
.navbar a.orange:hover {
  background-color: color-mix(in srgb, var(--orange), transparent 90%);
}
.navbar a.peach span {
  color: var(--peach);
}
.navbar a.peach:hover {
  background-color: color-mix(in srgb, var(--peach), transparent 90%);
}
.navbar a.purple span {
  color: var(--purple);
}
.navbar a.purple:hover {
  background-color: color-mix(in srgb, var(--purple), transparent 90%);
}
.navbar a.pink span {
  color: var(--pink);
}
.navbar a.pink:hover {
  background-color: color-mix(in srgb, var(--pink), transparent 90%);
}
.navbar a.mint span {
  color: var(--mint);
}
.navbar a.mint:hover {
  background-color: color-mix(in srgb, var(--mint), transparent 90%);
}
.navbar a.blue span {
  color: var(--blue);
}
.navbar a.blue:hover {
  background-color: color-mix(in srgb, var(--blue), transparent 90%);
}
.navbar a.lightblue span {
  color: var(--lightblue);
}
.navbar a.lightblue:hover {
  background-color: color-mix(in srgb, var(--lightblue), transparent 90%);
}
.navbar a.lightgray span {
  color: var(--lightgray);
}
.navbar a.lightgray:hover {
  background-color: color-mix(in srgb, var(--lightgray), transparent 90%);
}
.navbar a.olivegreen span {
  color: var(--olivegreen);
}
.navbar a.olivegreen:hover {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 90%);
}
.navbar a i {
  font-style: normal;
}
.navbar a span {
  color: var(--c1);
}
.navbar a:hover {
  background-color: color-mix(in srgb, var(--c1), transparent 90%);
}

vortex-navbar {
  display: flex;
  align-items: center;
  padding: 5px;
  border-radius: 8px;
  background-color: var(--bg-3);
  box-shadow: 0 0 0 1px var(--bg-5);
  position: fixed;
  top: 7px;
  left: 7px;
  width: calc(100% - 14px);
  z-index: 5;
}
vortex-navbar .logo {
  height: 30px;
  padding: 0 10px;
  margin-left: auto;
}

#sudo-indicator {
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  transition: 0.2s;
  margin-left: auto;
  margin-right: 20px;
  cursor: default;
  color: var(--text-color-2);
}
#sudo-indicator.base {
  color: var(--c1);
}
#sudo-indicator.sudo {
  color: var(--warning);
}

#accedi,
#registrati {
  display: block;
  margin: 20px auto;
  background-color: var(--bg-2);
  padding: 10px;
  border-radius: 10px;
  max-width: 500px;
}

#logs_container {
  position: fixed;
  bottom: 5px;
  left: 5px;
  display: flex;
  gap: 5px;
  z-index: 2050;
  max-width: 350px;
  flex-wrap: wrap;
}
#logs_container log-info {
  position: relative;
  padding: 6px 8px;
  padding-right: 20px;
  padding-bottom: 10px;
  border-radius: 23px;
  overflow: hidden;
  --bc-log: var(--bg-1);
  --i-color: var(--text-color);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  animation: bounce 500ms linear both;
  cursor: pointer;
}
#logs_container log-info .log-container {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  min-width: 200px;
  max-width: 350px;
}
#logs_container log-info.chiudi {
  animation: bounce-out 500ms linear both;
}
#logs_container log-info p {
  margin: 0;
  color: var(--text-color);
}
#logs_container log-info._0 {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 70%);
  color: var(--olivegreen);
}
#logs_container log-info._0::after {
  background-color: var(--olivegreen);
}
#logs_container log-info._1 {
  background-color: color-mix(in srgb, var(--warning), transparent 70%);
  color: var(--orange);
}
#logs_container log-info._1::after {
  background-color: var(--orange);
}
#logs_container log-info._2 {
  background-color: color-mix(in srgb, var(--danger), transparent 70%);
  color: var(--red);
}
#logs_container log-info._2::after {
  background-color: var(--red);
}
#logs_container log-info._3 {
  background-color: color-mix(in srgb, var(--lightblue), transparent 70%);
  color: var(--lightblue);
}
#logs_container log-info._3::after {
  background-color: var(--lightblue);
}
#logs_container log-info .i-container {
  height: 100%;
  display: flex;
  align-items: center;
}
#logs_container log-info .i-container i,
#logs_container log-info .i-container .material-symbols-rounded {
  font-size: calc(1em + 8px);
  padding: 8px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1/1;
}
#logs_container log-info::after, #logs_container log-info::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 5px;
  width: 0;
}
#logs_container log-info::after {
  width: 100%;
  border-radius: 0 5px 0 0;
  animation: log_bar 8s linear 0s 1;
}
#logs_container log-info::before {
  width: 100%;
}

#vaults-list,
#contacts-list {
  display: flex;
  margin: 0 auto;
  flex-wrap: wrap;
  flex-direction: column;
  gap: 8px;
}
#vaults-list .group,
#contacts-list .group {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  padding: 8px;
  border-radius: 23px;
  background-color: var(--bg-2);
}
#vaults-list .checkpoint,
#contacts-list .checkpoint {
  width: 100%;
  font-size: calc(1.2em + 2px);
  font-family: "JetBrains Mono", monospace;
  text-align: center;
  padding-top: 10px;
  cursor: default;
}
#vaults-list.searching,
#contacts-list.searching {
  padding: 8px 8px 2.5px 8px;
  border-radius: 23px;
  background-color: var(--bg-2);
  gap: 0;
}
#vaults-list.searching .checkpoint,
#contacts-list.searching .checkpoint {
  display: none;
}
#vaults-list.searching .group,
#contacts-list.searching .group {
  background-color: transparent;
  padding: 0;
  gap: 0;
  flex-direction: column;
}
#vaults-list.searching .group vault-li,
#vaults-list.searching .group contact-li,
#contacts-list.searching .group vault-li,
#contacts-list.searching .group contact-li {
  margin-bottom: 7.5px;
}
#vaults-list.list .group,
#contacts-list.list .group {
  flex-direction: column;
}
#vaults-list vault-li,
#vaults-list contact-li,
#contacts-list vault-li,
#contacts-list contact-li {
  display: flex;
  flex-direction: row;
  gap: 10px;
  flex-wrap: nowrap;
  align-items: center;
  cursor: pointer;
  padding: 10px;
  border-radius: 14px;
  background-color: var(--bg-3);
  transition: 0.15s;
  flex-grow: 1;
}
#vaults-list vault-li:hover,
#vaults-list contact-li:hover,
#contacts-list vault-li:hover,
#contacts-list contact-li:hover {
  background-color: var(--bg-4);
}
#vaults-list vault-li .simbolo,
#vaults-list contact-li .simbolo,
#contacts-list vault-li .simbolo,
#contacts-list contact-li .simbolo {
  color: var(--c1);
  font-size: 1.5em;
  padding: 5px;
  display: flex;
  align-items: center;
}
#vaults-list vault-li .simbolo.red,
#vaults-list contact-li .simbolo.red,
#contacts-list vault-li .simbolo.red,
#contacts-list contact-li .simbolo.red {
  color: var(--red);
}
#vaults-list vault-li .simbolo.yellow,
#vaults-list contact-li .simbolo.yellow,
#contacts-list vault-li .simbolo.yellow,
#contacts-list contact-li .simbolo.yellow {
  color: var(--yellow);
}
#vaults-list vault-li .simbolo.green,
#vaults-list contact-li .simbolo.green,
#contacts-list vault-li .simbolo.green,
#contacts-list contact-li .simbolo.green {
  color: var(--green);
}
#vaults-list vault-li .simbolo.orange,
#vaults-list contact-li .simbolo.orange,
#contacts-list vault-li .simbolo.orange,
#contacts-list contact-li .simbolo.orange {
  color: var(--orange);
}
#vaults-list vault-li .simbolo.peach,
#vaults-list contact-li .simbolo.peach,
#contacts-list vault-li .simbolo.peach,
#contacts-list contact-li .simbolo.peach {
  color: var(--peach);
}
#vaults-list vault-li .simbolo.purple,
#vaults-list contact-li .simbolo.purple,
#contacts-list vault-li .simbolo.purple,
#contacts-list contact-li .simbolo.purple {
  color: var(--purple);
}
#vaults-list vault-li .simbolo.pink,
#vaults-list contact-li .simbolo.pink,
#contacts-list vault-li .simbolo.pink,
#contacts-list contact-li .simbolo.pink {
  color: var(--pink);
}
#vaults-list vault-li .simbolo.mint,
#vaults-list contact-li .simbolo.mint,
#contacts-list vault-li .simbolo.mint,
#contacts-list contact-li .simbolo.mint {
  color: var(--mint);
}
#vaults-list vault-li .simbolo.blue,
#vaults-list contact-li .simbolo.blue,
#contacts-list vault-li .simbolo.blue,
#contacts-list contact-li .simbolo.blue {
  color: var(--blue);
}
#vaults-list vault-li .simbolo.lightblue,
#vaults-list contact-li .simbolo.lightblue,
#contacts-list vault-li .simbolo.lightblue,
#contacts-list contact-li .simbolo.lightblue {
  color: var(--lightblue);
}
#vaults-list vault-li .simbolo.lightgray,
#vaults-list contact-li .simbolo.lightgray,
#contacts-list vault-li .simbolo.lightgray,
#contacts-list contact-li .simbolo.lightgray {
  color: var(--lightgray);
}
#vaults-list vault-li .simbolo.olivegreen,
#vaults-list contact-li .simbolo.olivegreen,
#contacts-list vault-li .simbolo.olivegreen,
#contacts-list contact-li .simbolo.olivegreen {
  color: var(--olivegreen);
}
#vaults-list vault-li .info,
#vaults-list contact-li .info,
#contacts-list vault-li .info,
#contacts-list contact-li .info {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 7px;
}
#vaults-list vault-li .info i,
#vaults-list contact-li .info i,
#contacts-list vault-li .info i,
#contacts-list contact-li .info i {
  font-family: "JetBrains Mono", monospace !important;
}
#vaults-list vault-li .info strong,
#vaults-list contact-li .info strong,
#contacts-list vault-li .info strong,
#contacts-list contact-li .info strong {
  font-weight: normal;
  font-size: calc(1em + 3px);
}
#vaults-list vault-li .info i,
#vaults-list contact-li .info i,
#contacts-list vault-li .info i,
#contacts-list contact-li .info i {
  font-style: normal;
  font-size: 1em;
  color: var(--text-color-2);
}

#contacts-list.is-deleting contact-li:hover {
  background-color: color-mix(in srgb, var(--danger), transparent 85%);
}

#win-chat {
  display: flex;
  flex-direction: column;
  min-height: 400px;
}
#win-chat .win-header, #win-chat #send-message {
  flex-shrink: 0;
}

#messages {
  display: flex;
  flex-direction: column;
  gap: 8px;
  flex-grow: 1;
  overflow-y: scroll;
  overflow-x: hidden;
}
#messages message-g {
  display: flex;
  flex-direction: row;
  cursor: default;
}
#messages message-g .container {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 5px;
  background-color: var(--bg-5);
  color: var(--text-color);
  padding: 5px 8px;
  border-radius: 8px 8px 8px 0;
  min-width: 60px;
  max-width: 70%;
  margin-bottom: 20px;
}
#messages message-g .container::before {
  content: "";
  position: absolute;
  top: calc(100% - 11px);
  transform: rotate(-45deg);
  left: -11px;
  border: 11px solid transparent;
  border-bottom-color: var(--bg-5);
}
#messages message-g .container p {
  margin: 0;
}
#messages message-g .container span {
  position: absolute;
  top: calc(100% + 2px);
  right: 5px;
  color: var(--text-color-15);
  font-size: 0.9em;
}
#messages message-g .container.self {
  margin-left: auto;
  background-color: var(--message-bc);
  border-radius: 8px 8px 0 8px;
}
#messages message-g .container.self::before {
  left: inherit;
  right: -11px;
  border-bottom-color: transparent;
  border-left-color: var(--message-bc);
}
#messages message-g .container.self span {
  left: 5px;
}

.custom-sections.emt custom-vault-section {
  margin-top: 0.5rem;
}
.custom-sections.emb custom-vault-section {
  margin-bottom: 0.5rem;
}
.custom-sections custom-vault-section {
  background-color: var(--bg-4);
  padding: 0 7px 7px 7px;
  border-radius: 8px;
}
.custom-sections custom-vault-section .remove-custom-section {
  padding: 3px;
}
.custom-sections custom-vault-section .remove-custom-section .material-symbols-rounded {
  color: var(--text-color-2);
}

colored-password i {
  font-style: normal !important;
  font-family: "JetBrains Mono", monospace !important;
}
colored-password i.az {
  color: var(--peach);
}
colored-password i.AZ {
  color: var(--green);
}
colored-password i._09 {
  color: var(--red);
}
colored-password i._s {
  color: var(--lightblue);
}
colored-password.l {
  font-size: 1.2em;
}

password-strength-bar {
  display: flex;
  margin: 10px auto;
  width: 100%;
  overflow: hidden;
  background-color: var(--bg-3);
  padding: 5px;
  border-radius: 5px;
  font-size: 1em;
}
password-strength-bar.fs-l {
  font-size: 1.2em;
}
password-strength-bar .bar {
  overflow: hidden;
  border-radius: 5px;
  padding: 4px;
  transition: all 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 7px;
  font-family: "JetBrains Mono", monospace;
}
password-strength-bar .bar._1 {
  background-color: color-mix(in srgb, var(--danger), transparent 70%);
  color: var(--danger);
}
password-strength-bar .bar._2 {
  background-color: color-mix(in srgb, var(--warning), transparent 70%);
  color: var(--warning);
}
password-strength-bar .bar._3, password-strength-bar .bar._4 {
  background-color: color-mix(in srgb, var(--olivegreen), transparent 70%);
  color: var(--olivegreen);
}

#devices-list,
#passkey-list {
  display: flex;
  flex-direction: column;
  gap: 7px;
}

device-list-item,
passkey-list-item {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 8px;
  border-radius: 8px;
  background-color: var(--bg-4);
}
device-list-item .token-id,
passkey-list-item .token-id {
  display: flex;
  gap: 5px;
  align-items: center;
  color: var(--text-color-2);
  font-size: 0.9em;
}
device-list-item .token-id i,
passkey-list-item .token-id i {
  font-family: "JetBrains Mono", monospace !important;
  font-style: normal !important;
}
device-list-item.current .token-id,
passkey-list-item.current .token-id {
  color: var(--purple);
}
device-list-item .info,
passkey-list-item .info {
  display: flex;
  flex-direction: row;
  gap: 7px;
}

#qrcode-2fa-secret,
#qrcode-fsi {
  display: block;
  margin: 0 auto;
  height: 0;
}

#loader {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  width: 100%;
  height: 100%;
  background-color: color-mix(in srgb, var(--bg-1), transparent 50%);
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
  display: none;
}
#loader .full {
  width: 100%;
  height: 100%;
}

#loader svg {
  width: calc((15vw + 15vh) / 2);
  animation: ease-out loader infinite 2s;
}
#loader .material-symbols-rounded {
  font-size: calc((12vw + 12vh) / 2);
  animation: linear spin infinite 0.5s;
}

#modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: color-mix(in srgb, var(--bg-1), transparent 30%);
  z-index: 9;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.15s ease, visibility 0.15s ease;
}
#modal-backdrop.show {
  opacity: 1;
  visibility: visible;
}

mfa-input {
  display: block;
}

@keyframes bounce {
  0% {
    transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  4.7% {
    transform: matrix3d(0.45, 0, 0, 0, 0, 0.45, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  9.41% {
    transform: matrix3d(0.883, 0, 0, 0, 0, 0.883, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  14.11% {
    transform: matrix3d(1.141, 0, 0, 0, 0, 1.141, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  18.72% {
    transform: matrix3d(1.212, 0, 0, 0, 0, 1.212, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  24.32% {
    transform: matrix3d(1.151, 0, 0, 0, 0, 1.151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  29.93% {
    transform: matrix3d(1.048, 0, 0, 0, 0, 1.048, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  35.54% {
    transform: matrix3d(0.979, 0, 0, 0, 0, 0.979, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  41.04% {
    transform: matrix3d(0.961, 0, 0, 0, 0, 0.961, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  52.15% {
    transform: matrix3d(0.991, 0, 0, 0, 0, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  63.26% {
    transform: matrix3d(1.007, 0, 0, 0, 0, 1.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  85.49% {
    transform: matrix3d(0.999, 0, 0, 0, 0, 0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  100% {
    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
}
@keyframes bounce-out {
  0% {
    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  14.51% {
    transform: matrix3d(0.999, 0, 0, 0, 0, 0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  36.74% {
    transform: matrix3d(1.007, 0, 0, 0, 0, 1.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  47.85% {
    transform: matrix3d(0.991, 0, 0, 0, 0, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  58.96% {
    transform: matrix3d(0.961, 0, 0, 0, 0, 0.961, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  64.46% {
    transform: matrix3d(0.979, 0, 0, 0, 0, 0.979, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  70.07% {
    transform: matrix3d(1.048, 0, 0, 0, 0, 1.048, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  75.68% {
    transform: matrix3d(1.151, 0, 0, 0, 0, 1.151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  81.28% {
    transform: matrix3d(1.212, 0, 0, 0, 0, 1.212, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  85.89% {
    transform: matrix3d(1.141, 0, 0, 0, 0, 1.141, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  90.59% {
    transform: matrix3d(0.883, 0, 0, 0, 0, 0.883, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  95.3% {
    transform: matrix3d(0.45, 0, 0, 0, 0, 0.45, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
  100% {
    transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  }
}
@keyframes log_bar {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
@keyframes loader {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.2);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(1) rotate(360deg);
  }
}
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/**
 * ----------------------------------------
 * animation scale-in-center
 * ----------------------------------------
 */
@-webkit-keyframes scale-in-center {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes scale-in-center {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
}
@media screen and (max-width: 730px) {
  .pagina {
    margin-top: 0;
    margin-bottom: 70px;
  }
  vortex-navbar {
    position: fixed;
    top: unset;
    bottom: 0;
    left: 0;
    width: 100%;
    border-radius: 0;
  }
  vortex-navbar .navbar {
    width: 100%;
    flex-wrap: nowrap;
  }
  vortex-navbar .navbar a {
    justify-content: center;
    flex-grow: 1;
    font-size: 1.2em;
  }
  vortex-navbar .navbar a i {
    display: none;
  }
  vortex-navbar .logo {
    display: none;
  }
  .btn .text {
    display: none;
  }
  #logs_container {
    bottom: 60px;
  }
}

/*# sourceMappingURL=main.css.map */
